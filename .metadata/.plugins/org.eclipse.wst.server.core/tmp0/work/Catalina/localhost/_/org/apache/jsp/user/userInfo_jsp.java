/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.84
 * Generated at: 2018-03-27 01:58:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jeecg.pageModel.*;
import com.jeecg.model.*;
import com.jeecg.util.*;
import java.util.*;

public final class userInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\">\r\n");
      out.write("\t var userInfoForm;\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tuserInfoForm = $('#userInfoForm').form({\r\n");
      out.write("\t\t\turl : 'userAction!modifySelfPwd.action',\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tvar d = $.parseJSON(data);\r\n");
      out.write("\t\t\t\tif (d.success) {\r\n");
      out.write("\t\t\t\t\tuserInfoWindow.window('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$.messager.show({\r\n");
      out.write("\t\t\t\t\tmsg : d.msg,\r\n");
      out.write("\t\t\t\t\ttitle : '提示'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"easyui-layout\" fit=\"true\" border=\"false\">\r\n");
      out.write("\t<div region=\"center\" style=\"\" title=\"拥有权限\" border=\"false\">\r\n");
      out.write("\t\t");

			SessionInfo sessionInfo = (SessionInfo) session.getAttribute(ResourceUtil.getSessionInfoName());
			if (sessionInfo != null && sessionInfo.getAuths() != null && sessionInfo.getAuths().size() > 0) {
				List<Auth> auths = sessionInfo.getAuths();
				for (int i = 0; i < auths.size(); i++) {
					if (i > 0) {
						out.print("，");
					}
					Auth a = auths.get(i);
					out.print(a.getCname());
				}
			}
		
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div region=\"south\" style=\"overflow: hidden;height:115px;\" title=\"密码修改\" border=\"false\" align=\"center\">\r\n");
      out.write("\t\t<form id=\"userInfoForm\" method=\"post\">\r\n");
      out.write("\t\t\t<table class=\"tableForm\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>原密码</th>\r\n");
      out.write("\t\t\t\t\t<td><input name=\"oldPwd\" type=\"password\" class=\"easyui-validatebox\" required=\"true\" missingMessage=\"请填写原密码\" />\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>新密码</th>\r\n");
      out.write("\t\t\t\t\t<td><input name=\"cpwd\" type=\"password\" class=\"easyui-validatebox\" required=\"true\" missingMessage=\"请填写新密码\" />\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>重复密码</th>\r\n");
      out.write("\t\t\t\t\t<td><input name=\"rePassword\" type=\"password\" class=\"easyui-validatebox\" required=\"true\" missingMessage=\"请再次填写密码\" validType=\"eqPassword['#userInfoForm input[name=cpwd]']\" /></td>\r\n");
      out.write("\t\t\t\t\t<td><a name=\"btn\" class=\"easyui-linkbutton\" onclick=\"userInfoForm.submit();\">修改</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
